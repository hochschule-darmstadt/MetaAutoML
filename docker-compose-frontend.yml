# supplementary docker-compose file
version: "3.3"
services:
  blazorboilerplate:
    build:
      context: frontend
      # the below path is relative to the build context
      dockerfile: ./src/Utils/Docker/Dockerfile
    ports:
      - 53415:80
      - 53443:443
    depends_on:
      - sqlserver
      - controller
      - redis
    environment:
      - ASPNETCORE_ENVIRONMENT=Development #Consider changing this in Production
      - Serilog__MinimumLevel__Default=Debug #Consider changing this in Production
      - ConnectionStrings__DefaultConnection=Server=sqlserver;Database=blazor_boilerplate;Trusted_Connection=True;MultipleActiveResultSets=true;User=sa;Password=yourVeryStrong(!)Password;Integrated Security=false
      - BlazorBoilerplate__UseSqlServer=true
      - BlazorBoilerplate__ApplicationUrl=blazorboilerplate
      - BlazorBoilerplate__IS4ApplicationUrl=blazorboilerplate
      - BlazorBoilerplate__CertificatePassword=Admin123
      - ASPNETCORE_URLS=https://+:443;http://+80
      - ASPNETCORE_Kestrel__Certificates__Default__Password=Admin123
      - ASPNETCORE_Kestrel__Certificates__Default__Path=aspnetapp.pfx
      - CONTROLLER_SERVICE_HOST=controller
      - CONTROLLER_SERVICE_PORT=5001
      - REDIS_SERVICE_HOST=redis
      - REDIS_SERVICE_PORT=6379
      - CONTROLLER_DATASET_FOLDER_PATH=/app/app-data/datasets
      - REGISTRATION_ALLOWED=false
    restart: on-failure
    volumes:
      # shared volumes between frontend and controller
      - datasets:/app/app-data/datasets
      - training:/app/app-data/training
      - training-autokeras:/app/app-data/training/autokeras
      - training-mljar:/app/app-data/training/mljar
      - training-sklearn:/app/app-data/training/sklearn
      - training-flaml:/app/app-data/training/flaml
      - training-gluon:/app/app-data/training/gluon
      #- training-autocve:/app/app-data/training/autocve
      #- training-pytorch:/app/app-data/training/pytorch
      #- training-alphad3m:/app/app-data/training/alphad3m
      - training-mcfly:/app/app-data/training/mcfly
      - training-evalml:/app/app-data/training/evalml
    extra_hosts:
      - "docker.host.internal:host-gateway"

  sqlserver:
    image: mcr.microsoft.com/azure-sql-edge:latest
    volumes:
      - dbdata:/var/opt/mssql
    environment:
      - MSSQL_SA_PASSWORD=yourVeryStrong(!)Password
      - ACCEPT_EULA=Y
    ports:
      - 1533:1433 #expose port, so can connect to it using host: 'localhost,1533' | user: sa, password: yourVeryStrong(!)Password

  redis:
    image: "redis:alpine"
    volumes:
      - redisdata:/data
      - redisdata:/var/lib/redis
      - redisdata:/usr/local/etc/redis/redis.conf
    ports:
      - "6379:6379"

volumes:
  dbdata:
  redisdata:
