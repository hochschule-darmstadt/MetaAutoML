# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: ModelRelatedMessages.proto
# plugin: python-betterproto
from dataclasses import dataclass
from datetime import datetime
from typing import List

import betterproto


@dataclass
class StartDashboardRequest(betterproto.Message):
    # Unique user id generated by the controller on the create new user request
    # from the frontend. Linked to a AspNetUser saved within the MS Sql database
    # of the frontendexample: '4a7af128-ac3d-4e3d-89fe-b70f7bfe0c3b'
    user_id: str = betterproto.string_field(1)
    # Unique model ids generated when inserting a new model document into
    # MongoDBexample: '63525870394eff35ee175bc2'
    model_id: str = betterproto.string_field(2)


@dataclass
class StartDashboardResponse(betterproto.Message):
    url: str = betterproto.string_field(1)
    session_id: str = betterproto.string_field(2)


@dataclass
class StopDashboardRequest(betterproto.Message):
    # Unique user id generated by the controller on the create new user request
    # from the frontend. Linked to a AspNetUser saved within the MS Sql database
    # of the frontendexample: '4a7af128-ac3d-4e3d-89fe-b70f7bfe0c3b'
    session_id: str = betterproto.string_field(1)


@dataclass
class StopDashboardResponse(betterproto.Message):
    pass


@dataclass
class DeleteModelRequest(betterproto.Message):
    # Unique user id generated by the controller on the create new user request
    # from the frontend. Linked to a AspNetUser saved within the MS Sql database
    # of the frontendexample: '4a7af128-ac3d-4e3d-89fe-b70f7bfe0c3b'
    user_id: str = betterproto.string_field(1)
    # Unique model ids generated when inserting a new model document into
    # MongoDBexample: '63525870394eff35ee175bc2'
    model_id: str = betterproto.string_field(2)


@dataclass
class DeleteModelResponse(betterproto.Message):
    pass


@dataclass
class GetModelsRequest(betterproto.Message):
    # Unique user id generated by the controller on the create new user request
    # from the frontend. Linked to a AspNetUser saved within the MS Sql database
    # of the frontendexample: '4a7af128-ac3d-4e3d-89fe-b70f7bfe0c3b'
    user_id: str = betterproto.string_field(1)
    # Unique dataset id generated when inserting a new dataset document into
    # MongoDBexample: '63515c86b10d04d230dc1482'
    dataset_id: str = betterproto.string_field(2)


@dataclass
class GetModelsResponse(betterproto.Message):
    # List of model records from MongoDB (see Model for more detals)example:
    # [Model, Model]
    models: List["Model"] = betterproto.message_field(1)


@dataclass
class GetModelRequest(betterproto.Message):
    # Unique user id generated by the controller on the create new user request
    # from the frontend. Linked to a AspNetUser saved within the MS Sql database
    # of the frontendexample: '4a7af128-ac3d-4e3d-89fe-b70f7bfe0c3b'
    user_id: str = betterproto.string_field(1)
    # Unique model ids generated when inserting a new model document into
    # MongoDBexample: '63525870394eff35ee175bc2'
    model_id: str = betterproto.string_field(2)


@dataclass
class GetModelResponse(betterproto.Message):
    # Model record from MongoDB (see Model for more detals)example: Model
    model: "Model" = betterproto.message_field(1)


@dataclass
class Model(betterproto.Message):
    # Unique model ids generated when inserting a new model document into
    # MongoDBexample: '63525870394eff35ee175bc2'
    id: str = betterproto.string_field(1)
    # Unique training id generated when inserting a new training document into
    # MongoDBexample: "63525870394eff35ee175bc2"
    training_id: str = betterproto.string_field(2)
    # List of prediction objects representing Prediction records in MongoDB made
    # with this model (see Prediction for more detals)example: [Prediction,
    # Prediction]
    predictions: List["Prediction"] = betterproto.message_field(3)
    # Current activity status of the AutoML adapter training this model (busy,
    # completed, failed)example: "busy"
    status: str = betterproto.string_field(4)
    # Ontology URI of the used AutoML Solutionexample: ":autokeras"
    auto_ml_solution: str = betterproto.string_field(5)
    # list of Ontology URI of the used ML model typeexample:
    # ":artificial_neural_network"
    ml_model_type: List[str] = betterproto.string_field(6)
    # List of Ontology URI of the used ML libraryexample: [":Keras_lib"]
    ml_library: List[str] = betterproto.string_field(7)
    # Absolute system path where the final model pipeline zip is locatedexample:
    # app/app-data/....../result/keras_model.zip
    path: str = betterproto.string_field(8)
    # Json string of the test scores computed by testing the model with the test
    # dataset.example: {":precision": 0.222,":f_measure": 0.9.....}
    test_score: str = betterproto.string_field(9)
    # Time in ms it takes on average to make on prediction with this
    # modelexample: 23.9999
    prediction_time: float = betterproto.float_field(10)
    # The Model runtime profile object (see ModelruntimeProfile for more
    # details)example: ModelruntimeProfile
    runtime_profile: "ModelruntimeProfile" = betterproto.message_field(11)
    # List of status messages produced by the AutoML solutionexample: ["starting
    # search..", "epoch 1...."]
    status_messages: List[str] = betterproto.string_field(12)
    # JSON string of the explanation AI module result with paths to the generated
    # plots and explanationsexample: {"status": "finished","detail": "5 plots
    # created","content": [{"title": "SHAP Explanation","items": [{"type":
    # "summary_plot","title": "Summary plot","description": "The summary plot
    # aggregates the importance of all features towards all classes. The higher
    # the x-axis value is for a feature the more significance this feature has
    # for the model. The color split within the bars indicates for which class
    # this feature is important. If the bar coloring is split evenly the values
    # of this feature are equally important for all classes. If it is skewed
    # towards one color the values of this feature are only important when
    # deciding for the one corresponding class.","path": "\\app-
    # data\\training\\flaml\\.....\\result\\plots\\summary_bar.svg"},.....]}]}
    explanation: str = betterproto.string_field(13)
    # Amount of kg of CO2-eq produced during the model trainingexample:
    # ["starting search..", "epoch 1...."]
    emission: float = betterproto.double_field(14)
    # The status of the model dashboardexample: created / failed / building
    dashboard_status: str = betterproto.string_field(15)


@dataclass
class ModelruntimeProfile(betterproto.Message):
    # The timestamp when the adapter search process startedexample: 1666283732325
    start_time: datetime = betterproto.message_field(1)
    # The timestamp when the adapter search process endedexample: 1666283732325
    end_time: datetime = betterproto.message_field(2)
