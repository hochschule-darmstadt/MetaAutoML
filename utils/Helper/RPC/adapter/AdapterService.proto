syntax = "proto3";

/* 
AutoML Adapter Service implementation. Service provide functionality to execute and interact with the current AutoML process.
*/
service AdapterService {
  rpc StartAutoML(StartAutoMLRequest) returns (StartAutoMLResponse) {}
  rpc GetAutoMLStatus(GetAutoMLStatusRequest) returns (GetAutoMLStatusResponse) {}
  rpc ExplainModel(ExplainModelRequest) returns (ExplainModelResponse) {}
  rpc PredictModel(PredictModelRequest) returns (PredictModelResponse) {}
}


message StartAutoMLRequest {
    string trainingId = 1;
    string datasetId = 2;
    string userId = 3;
    string DatasetPath = 4;
    StartAutoMLConfiguration configuration = 5;
    string datasetConfiguration = 6;
}
message StartAutoMLConfiguration {
    string task = 1;
    string target = 2;
    int32 runtimeLimit = 4;
    string metric = 5;
}

message StartAutoMLResponse {
    string sessionId = 1;
}

message GetAutoMLStatusRequest {
    string sessionId = 1;
}

message GetAutoMLStatusResponse {
	AdapterReturnCode returnCode = 1;
	string statusUpdate = 2;
	string outputJson = 3;
	float testScore = 4;
    float validationScore = 5;
    int32 runtime = 6;
    float predictionTime = 7;
    string library = 8;
    string model = 9;
}

message ExplainModelRequest {
    string data = 1;
    string processJson = 2;
    string sessionId = 3;
}

message ExplainModelResponse {
    string sessionId = 1;
    string probabilities = 2;
}

message PredictModelRequest {
    string processJson = 1;
}

message PredictModelResponse {
    repeated string predictions = 1;
    float predictiontime = 2;
    string resultPath = 3;
}

enum AdapterReturnCode {
	ADAPTER_RETURN_CODE_UNKNOWN = 0;
	ADAPTER_RETURN_CODE_SUCCESS = 1;
	ADAPTER_RETURN_CODE_PENDING = 2;
	ADAPTER_RETURN_CODE_STATUS_UPDATE = 3;
	ADAPTER_RETURN_CODE_ERROR = 100;
}