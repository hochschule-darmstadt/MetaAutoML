@inherits RootLayout
@inject NavigationManager navigationManager
@inject AppState appState
@inject IStringLocalizer<Global> L

<CascadingValue Value="this">
    <MudLayout>
        <MudAppBar Elevation="1">
            <MudIconButton Icon="@navMenuIcon" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
            <MudSpacer />
            <MudText Color="Color.Dark" Typo="Typo.h6" Style="font-size: clamp(0.9rem, -0.425rem + 3.4vw, 1.5rem);">OMA-ML: Effective Machine Learning made easy!</MudText>
            <MudSpacer />
            <TopRightBarSection />
        </MudAppBar>
        <MudDrawer @bind-Open="@_navMenuOpened" Elevation="2">
            <MudDrawerHeader >
                    <a href="/" title="@appState.AppName Home">
                <div class="drawer-logo">
                        <img alt="@appState.AppName" class="logo-img" src=@($"{Module.ContentPath}/images/oma-logo.svg") title="@appState.AppName">
                        <MudText Typo="Typo.h4" Color="Color.Primary" style="font-family: 'Noto Sans'" Class="docs-brand-text">@appState.AppName</MudText>
                </div>
                    </a>
            </MudDrawerHeader>
            <NavMenu />
            <DrawerFooter />
        </MudDrawer>
        <MudMainContent Style="min-height: 100vh; display: flex; flex-direction: column">
            <MudContainer MaxWidth="MaxWidth.False" Style="flex: 1">
                @TopSection
                <MudPaper Class="py-4" Elevation="0">
                    @Body
                </MudPaper>
            </MudContainer>
            <Footer />
        </MudMainContent>
        <MudScrollToTop TopOffset="400" Style="z-index:2000;">
            <MudFab Icon="@Icons.Material.Filled.KeyboardArrowUp" Color="Color.Primary" />
        </MudScrollToTop>
    </MudLayout>
</CascadingValue>

@code {
    bool _navMenuOpened = true;
    string navMenuIcon = Icons.Filled.ArrowBackIos;

    [CascadingParameter]
    Task<AuthenticationState> authenticationStateTask { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var user = (await authenticationStateTask).User;

        if (user.Identity.IsAuthenticated)
        {
            var profile = await appState.GetUserProfile();

            _navMenuOpened = profile.IsNavOpen;
        }
    }

    private void DrawerToggle()
    {
        _navMenuOpened = !_navMenuOpened;
        @if (_navMenuOpened == true) {
            navMenuIcon = Icons.Filled.ArrowBackIos;
        }
        else {
            navMenuIcon = Icons.Filled.ArrowForwardIos;
        }
    }
}
