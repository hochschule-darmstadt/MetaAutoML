@page "/help"
@inject IStringLocalizer<Global> L
@attribute [Authorize]
@inject NavigationManager navigationManager
@inject IJSRuntime JS
@using Newtonsoft.Json
@inject IApiClient apiClient

<TopSection>
    <MudBreadcrumbs Items="_breadcrumbs" Class="mudbreadcrumbs"></MudBreadcrumbs>
</TopSection>
<MudStack AlignItems="AlignItems.Center" Row="true" Class="mb-2" style="padding-top:50px;padding-bottom:1rem;">
    <MudIcon Size="Size.Large" Icon="@Icons.Material.Filled.HelpOutline" />
    <LabelTooltip FontSize="Radzen.Blazor.TextStyle.H4" Label="Help" Text="Read how to solve different tasks with OMA-ML or start a guided tour." Position="Radzen.TooltipPosition.Bottom"></LabelTooltip>
</MudStack>
<MudStack>
    <MudDrawer Style="padding-left: 1rem;" Open="true" Anchor="Anchor.End" Elevation="2" Variant="@DrawerVariant.Persistent">
        <MudDrawerHeader>
            <MudText Style="padding-top:1.3rem;" Typo="Typo.h6">Contents</MudText>
        </MudDrawerHeader>
        <MudNavMenu>
            <MudNavGroup Title="Introduction" @onclick="()=> ChangePanel(introduction)" Expanded="currentPanelIntroduction">
                <AnchorLink TargetId="datasetUpload"><MudNavLink Match="NavLinkMatch.All" Style="color:#424242;text-decoration:none!important;">Dataset upload</MudNavLink></AnchorLink>
                <AnchorLink TargetId="preprocessing"><MudNavLink Match="NavLinkMatch.All" Style="color:#424242;text-decoration:none!important;">Preprocessing</MudNavLink></AnchorLink>
                <AnchorLink TargetId="modelselection"><MudNavLink Match="NavLinkMatch.All" Style="color:#424242;text-decoration:none!important;">Model selection</MudNavLink></AnchorLink>
                <AnchorLink TargetId="training"><MudNavLink Match="NavLinkMatch.All" Style="color:#424242;text-decoration:none!important;">Training</MudNavLink></AnchorLink>
                <AnchorLink TargetId="deployment"><MudNavLink Match="NavLinkMatch.All" Style="color:#424242;text-decoration:none!important;">Deployment</MudNavLink></AnchorLink>
                <AnchorLink TargetId="prediction"><MudNavLink Match="NavLinkMatch.All" Style="color:#424242;text-decoration:none!important;">Prediction</MudNavLink></AnchorLink>
            </MudNavGroup>
            <MudNavGroup Title="Pages" @onclick="()=> ChangePanel(pages)" Expanded="!currentPanelIntroduction">
                <AnchorLink TargetId="home"><MudNavLink Match="NavLinkMatch.All" Style="color:#424242;text-decoration:none!important;">Home</MudNavLink></AnchorLink>
                <AnchorLink TargetId="datasets"><MudNavLink Match="NavLinkMatch.All" Style="color:#424242;text-decoration:none!important;">Datasets</MudNavLink></AnchorLink>
                <AnchorLink TargetId="datasetdetail"><MudNavLink Match="NavLinkMatch.All" Style="color:#424242;text-decoration:none!important;">Dataset Detail</MudNavLink></AnchorLink>
                <AnchorLink TargetId="datasetconfigure"><MudNavLink Match="NavLinkMatch.All" Style="color:#424242;text-decoration:none!important;">Dataset Configure</MudNavLink></AnchorLink>
                <AnchorLink TargetId="trainings"><MudNavLink Match="NavLinkMatch.All" Style="color:#424242;text-decoration:none!important;">Trainings</MudNavLink></AnchorLink>
                <AnchorLink TargetId="traindatasetpreparation"><MudNavLink Match="NavLinkMatch.All" Style="color:#424242;text-decoration:none!important;">Train - Dataset preparation</MudNavLink></AnchorLink>
                <AnchorLink TargetId="trainconfiguration"><MudNavLink Match="NavLinkMatch.All" Style="color:#424242;text-decoration:none!important;">Train - Configuration</MudNavLink></AnchorLink>
                <AnchorLink TargetId="trainingdetail"><MudNavLink Match="NavLinkMatch.All" Style="color:#424242;text-decoration:none!important;">Training Detail</MudNavLink></AnchorLink>
                <AnchorLink TargetId="models"><MudNavLink Match="NavLinkMatch.All" Style="color:#424242;text-decoration:none!important;">Models</MudNavLink></AnchorLink>
                <AnchorLink TargetId="modeldetail"><MudNavLink Match="NavLinkMatch.All" Style="color:#424242;text-decoration:none!important;">Model Detail</MudNavLink></AnchorLink>
            </MudNavGroup>
        </MudNavMenu>
    </MudDrawer>
    <MudGrid Style="margin-top:0.14rem;">
        <MudItem xs="12" sm="12" md="12">
            <MudCard Elevation="5" data-form-forthStep>
                <MudGrid>
                    <MudItem xs="6">
                        <MudText Typo="Typo.subtitle1" Style="padding-top:10rem;padding-left:2rem;">Watch the video for a quick start of strat a guided tour</MudText>
                        <MudButton Style="margin-left:2rem; margin-bottom:10rem;margin-top:1rem;"
                                   Variant="Variant.Filled"
                                   Color="Color.Secondary"
                                   Size="Size.Medium"
                                   OnClick="@StartTour">Start guided tour</MudButton>
                    </MudItem>
                    <MudItem xs="6">
                        <iframe class="embed-responsive-item" style="padding:2rem; aspect-ratio:16/9;"
                                src="@($"_content/BlazorBoilerplate.Theme.MudBlazor/images/TestVideo.mp4")"
                                frameborder="1"
                                allowfullscreen></iframe>
                    </MudItem>
                </MudGrid>
            </MudCard>
        </MudItem>
        <MudItem xs="12" sm="12" md="12">
            <MudCard Elevation="5">
                <MudTabs Elevation="2" Rounded="true" ApplyEffectsToContainer="true" PanelClass="pa-2" @ref="tabs">
                    <MudTabPanel OnClick="@PanelSwitch" Text="Introduction" @ref="introduction">
                        <MudCardHeader Style="border-bottom-style: inset; border-bottom-width: 1px;">
                            <CardHeaderContent>
                                <MudText Style="margin-left:2rem;margin-top:2rem;" Typo="Typo.h6">@introductionTab.PanelHeadline</MudText>
                            </CardHeaderContent>
                        </MudCardHeader>
                        <MudCardContent>
                            <MudImage Style="width:90%;margin-left:2rem;" Src="@($"_content/BlazorBoilerplate.Theme.MudBlazor/images/FlowChart.png")" />
                            @foreach (Section section in this.introductionTab.Sections)
                                {
                                <MudGrid id="@(section.Anchor)">
                                    <MudItem xs="6">
                                        <MudText Style="margin-left: 2rem; padding-top: 10rem; color: #5c78ef;" Typo="Typo.h6">
                                        @(section.Headline)
                                        </MudText>
                                        <MudText Style="margin-left:2rem;margin-top:1rem;" Typo="Typo.body2">
                                            @(section.Text)
                                        </MudText>
                                    </MudItem>
                                    <MudItem xs="6">
                                        <img style=" width: 90%; margin: 3rem; padding-top: 5rem; padding-right: 2rem;" src="@(section.GIF)"/>
                                    </MudItem>
                                </MudGrid>
                            }
                        </MudCardContent>
                    </MudTabPanel>
                    <MudTabPanel OnClick="@PanelSwitch" Text="Pages" @ref="pages">
                        <MudCardHeader Style="border-bottom-style: inset; border-bottom-width: 1px;">
                            <CardHeaderContent>
                                <MudText Style="margin-left:2rem;margin-top:2rem;" Typo="Typo.h6">@pagesTab.PanelHeadline</MudText>
                            </CardHeaderContent>
                        </MudCardHeader>
                        <MudCardContent>
                            @foreach (Section section in this.pagesTab.Sections)
                            {@if ((this.pagesTab.Sections.IndexOf(section) % 2) == 0)
                                {
                                    <MudGrid id="@(section.Anchor)">
                                        <MudItem xs="6">
                                            <MudText Style="margin-left: 2rem; padding-top: 2rem;" Color="Color.Secondary" Typo="Typo.h6">@(section.Headline)</MudText>
                                            <MudText Style="margin-left:2rem;margin-top:0.5rem;" Typo="Typo.body2">
                                                @(section.Text)
                                                @foreach (Subsection subsection in section.Subsections)
                                                {
                                                    <br />
                                                    <br />
                                                    <b>@(subsection.SubHeadline)</b>
                                                    <br />
                                                    @(subsection.SubText)
                                                }
                                            </MudText>
                                        </MudItem>
                                        <MudItem xs="6">
                                            <img style=" width: 90%; margin: 3rem; padding-right: 2rem;" src="@(section.GIF)" />
                                        </MudItem>
                                    </MudGrid>
                                }
                                else
                                {
                                    <MudGrid Style="border-bottom-style: inset; border-bottom-width: 1px; padding-bottom: 2rem;" data-form-firstStep id="@(section.Anchor)">
                                        <MudItem xs="6">
                                            <MudText Style="margin-left: 2rem; padding-top: 4rem;" Typo="Typo.h6" Color="Color.Secondary">@(section.Headline)</MudText>
                                            <img style=" width: 90%; margin: 2rem; padding-right: 2rem;" src="@(section.GIF)" />
                                        </MudItem>
                                        <MudItem xs="6">
                                            <MudText Style="margin-left:2rem;margin-top:8rem;" Typo="Typo.body2">
                                                @(section.Text)
                                                @foreach (Subsection subsection in section.Subsections)
                                                {
                                                    <br />
                                                    <br />
                                                    <b>@(subsection.SubHeadline)</b>
                                                    <br />
                                                    @(subsection.SubText)
                                                }
                                            </MudText>
                                        </MudItem>
                                    </MudGrid>
                                }
                        }
                        </MudCardContent>
                    </MudTabPanel>
                </MudTabs>
            </MudCard>
        </MudItem>
    </MudGrid>
</MudStack>

<UserTour></UserTour>



@code {

    private List<BreadcrumbItem> _breadcrumbs = new List<BreadcrumbItem>();
    [Inject]
    private GTour.Abstractions.IGTourService GTourService { get; set; }
    private bool currentPanelIntroduction = true;
    private MudTabs tabs;
    private MudTabPanel introduction;
    private MudTabPanel pages;
    List<HelpPageDto> helpTabPanelList = new List<HelpPageDto>();
    HelpPageDto introductionTab = new HelpPageDto();
    HelpPageDto pagesTab = new HelpPageDto();

    protected override async Task OnInitializedAsync()
    {
        this.helpTabPanelList = await apiClient.GetHelpPageJson();
        this.helpTabPanelList.ForEach(tab => { if (tab.PanelHeadline.Equals("Introduction")) { this.introductionTab = tab; } else if (tab.PanelHeadline.Equals("Pages")) { this.pagesTab = tab; } });
        StateHasChanged();
        _breadcrumbs.Add(new BreadcrumbItem(L["Home"], "/", false, Icons.Filled.Home));
        _breadcrumbs.Add(new BreadcrumbItem(L["Help"], "/help", false, Icons.Material.Filled.HelpOutline));
        //StateHasChanged();
        TourService userTour = new TourService(GTourService);
        await userTour.checkIfUserTourIsActivated(navigationManager.Uri);
        StateHasChanged();


    }


    private async Task StartTour()
    {
        await GTourService.StartTour("FormGuidedTour");
    }
    private void PanelSwitch()
    {
        this.currentPanelIntroduction = !this.currentPanelIntroduction;
    }
    private void ChangePanel(MudTabPanel tab)
    {
        if ((tab == introduction) && (!currentPanelIntroduction))
        {
            tabs.ActivatePanel(tab);
        }
        else if ((tab == pages) && (currentPanelIntroduction))
        {
            tabs.ActivatePanel(tab);
        }

    }






}









