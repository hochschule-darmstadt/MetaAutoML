@page "/search/{query}"
@page "/search"
@using System.ComponentModel.DataAnnotations
@inject NavigationManager navigationManager

<MudGrid>
	<MudCard Elevation="5" Style="margin: 24px">
		<MudGrid>
	<MudItem xs="12">
		<div Style="margin: 16px">
					<HelpSearchComponent query="@query" HelpSite="true" OnStatesChanged="HandleStatesChanged"></HelpSearchComponent>
		</div>
	</MudItem>
	<MudItem xs="3">
		<div Style="margin: 16px">
		<MudText Color="Color.Dark" Typo="Typo.h6">Results</MudText>
		<MudNavMenu Rounded="true" Margin="Margin.Normal" Color="Color.Secondary" Class="pa-2" Style="width:14.2rem">
			@foreach (var state in HelpSearchComponent.states.Where(x => x.Text.Contains(query, StringComparison.InvariantCultureIgnoreCase)))
			{
				<MudNavLink>@state</MudNavLink>
			}
		</MudNavMenu>
		</div>
	</MudItem>
	<MudItem xs="9">
		<div Style="margin: 16px">
			<MudText Color="Color.Dark" Typo="Typo.h6">Result</MudText>
			<p>Kontent</p>
		</div>
	</MudItem>
		</MudGrid>
	</MudCard>
</MudGrid>

@code {
	/*
	 * query contains the search query that will be redirectet from the search bar in MainLayout to the searchbar in this Page
	 */
	[Parameter]
	public string query { get; set; }

	private void HandleStatesChanged()
	{
		StateHasChanged();
	}
}
