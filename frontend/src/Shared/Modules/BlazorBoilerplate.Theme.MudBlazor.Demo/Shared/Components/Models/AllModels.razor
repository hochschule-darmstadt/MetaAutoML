@inject IStringLocalizer<Global> L
@inject NavigationManager NavManager


<MudCard Elevation="5">
    <MudCardHeader Style="border-bottom-style: inset; border-bottom-width: 1px;">
        <CardHeaderContent >
            <MudText Typo="Typo.h6">All Models</MudText>
        </CardHeaderContent>
    </MudCardHeader>
    <MudCardContent>
        @if (Models == null)
        {
                <DataLoaderSpinner />
        }
        else
        {
            <MudTable Items="@Models.Models" style="width:stretch" class="mat-elevation-z5" AllowSelection="false" Dense="true" Filter="new Func<ModelDto,bool>(FilterFunc)">                
                <ToolBarContent>
                    <MudTextField @bind-Value="searchString" Placeholder="@L["Search by name, status, lib or AutoML system"]" Adornment="Adornment.Start"
                                    AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
                </ToolBarContent>
                <HeaderContent>
                    <MudTh><MudTableSortLabel SortBy="@(new Func<ModelDto, object>(x=>x.MlModelType.Properties["skos:prefLabel"]))">@L["Name"]</MudTableSortLabel></MudTh>
                    <MudTh><MudTableSortLabel SortBy="new Func<ModelDto, object>(x=>x.Status)">@L["Status"]</MudTableSortLabel></MudTh>
                    <MudTh><MudTableSortLabel SortBy="@(new Func<ModelDto, object>(x=>x.MlLibrary.Properties[" skos:prefLabel"]))">@L["Library"]</MudTableSortLabel></MudTh>
                    <MudTh><MudTableSortLabel SortBy="@(new Func<ModelDto, object>(x=>x.AutoMlSolution.Properties[" skos:prefLabel"]))">@L["AutoML solution"]</MudTableSortLabel></MudTh>
                    <MudTh><MudTableSortLabel SortBy="new Func<ModelDto, object>(x=>x.TestScore)">@L["Test score"]</MudTableSortLabel></MudTh>
                    <MudTh><MudTableSortLabel SortBy="new Func<ModelDto, object>(x=>x.RuntimeProfile)">@L["Runtime"]</MudTableSortLabel></MudTh>
                    <MudTh><MudTableSortLabel SortBy="new Func<ModelDto, object>(x=>x.PredictionTime)">@L["Prediction time"]</MudTableSortLabel></MudTh>
                </HeaderContent>
                <RowTemplate>
                    <MudTd >
                        <MudLink Href="@NavManager.ToAbsoluteUri("datasets/" + @DatasetId + "/modelsview/" + @context.Id).AbsoluteUri" Style="cursor: pointer; display: flex;">
                            <MudIcon Size="Size.Small" Icon="@Icons.Material.Filled.ModelTraining" Style="margin-right: 4px;" />
                            @(context.MlModelType.Properties.ContainsKey("skos:prefLabel") ? context.MlModelType.Properties["skos:prefLabel"] : "")
                            </MudLink>
                    </MudTd>
                    <MudTd>@context.Status</MudTd>
                    <MudTd>
                        @(context.MlLibrary.Properties.ContainsKey("skos:prefLabel") ? context.MlLibrary.Properties["skos:prefLabel"] : "")
                    </MudTd>
                    <MudTd>
                        @(context.AutoMlSolution.Properties.ContainsKey("skos:prefLabel") ? context.AutoMlSolution.Properties["skos:prefLabel"] : "")
                    </MudTd>
                    <MudTd>@String.Format("{0:0.00}", context.TestScore)</MudTd>
                    <MudTd>
                        @if (context.Status == "busy")
                            {
                                @(DateTime.UtcNow.Subtract(context.RuntimeProfile.StartTime).TotalSeconds.ToString("0 s"))
                            }
                            else
                            {
                            @(context.RuntimeProfile.EndTime.Subtract(context.RuntimeProfile.StartTime).TotalSeconds.ToString("0 s"))
                            }

                    </MudTd>
                    <MudTd>@String.Format("{0:0}", context.PredictionTime) ms</MudTd>
                    <MudTd><ModelMenu Model="@context" OnDeleteCompleted="@OnDeleteModelCompleted" /></MudTd>
                </RowTemplate>
                <PagerContent>
                    <MudTablePager  />
                </PagerContent>
            </MudTable>
        }
    </MudCardContent>
</MudCard>

@code {
    [Parameter]
    public EventCallback OnDeleteModelCompleted { get; set; }
    [Parameter]
    public string DatasetId { get; set; }
    [Parameter]
    public GetModelsResponseDto Models
    { 
        get
        {
            return _models;
        } 
        set
        {
            _models = value;
            if(_models != null)
            {
                StateHasChanged();
            }
        } 
    }
    private string searchString = "";
    private GetModelsResponseDto _models;

    private bool FilterFunc(ModelDto element)
    {
        if (string.IsNullOrWhiteSpace(searchString))
            return true;
        if (element.AutoMlSolution.Properties["skos:prefLabel"].Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if (element.MlLibrary.Properties["skos:prefLabel"].Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if (element.Status.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if (element.MlLibrary.Properties["skos:prefLabel"].Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        return false;
    } 

}
