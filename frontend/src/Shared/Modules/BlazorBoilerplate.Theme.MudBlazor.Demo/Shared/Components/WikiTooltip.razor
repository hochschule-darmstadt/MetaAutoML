@using Radzen.Blazor
@using Radzen
@inject TooltipService tooltipService


@if (!string.IsNullOrEmpty(InfoText))
{
    @if (Selected)
    {
        <RadzenText MouseEnter="@(args => ShowTooltipWithHtml(args, new TooltipOptions() {Position=TooltipPosition.Top}))" Style="color:white;padding-top:0.5rem;" Text="@Label" />
    }
    else
    {
        <RadzenText MouseEnter="@(args => ShowTooltipWithHtml(args, new TooltipOptions() {Position=TooltipPosition.Top}))" Style="color: #ff9c04; padding-top: 0.5rem;" Text="@Label" />
    }
}
else
{
    {
        <RadzenText Style="padding-top:0.5rem;" Text="@Label" />
    }
}

@code {
    [Parameter]
    public string SeeAlso { get; set; }

    [Parameter]
    public string Comment { get; set; }

    [Parameter]
    public bool Selected { get; set; }

    [Parameter]
    public string Label { get; set; }

    [Parameter]
    public RenderFragment ChildContent { get; set; }

    public string ImageUrl;
    public string InfoText;
    public string WikipediaURL;

    void ShowTooltipWithHtml(ElementReference elementReference, TooltipOptions options = null) => tooltipService.Open(elementReference, ds =>
        @<div class="rz-text-wrap" style="max-width:20rem">
            @if (!string.IsNullOrEmpty(ImageUrl))
            {
                <MudItem xs="12">
                    <MudPaper Class="d-flex align-center justify-center mud-width-full py-8"> <MudImage Src="@ImageUrl" Elevation="25" /></MudPaper>
                </MudItem>
            }
            @InfoText @if (!string.IsNullOrEmpty(WikipediaURL))
            {<a target="_blank" rel="noopener noreferrer" href=@WikipediaURL style="color:white"> <u> More...</u></a>}
        </div>, options);


    protected override async void OnInitialized()
    {
        if (string.IsNullOrEmpty(SeeAlso))
        {
            InfoText = Comment;
        }
        else
        {
            await Task.Run(() =>
            {
                WikiDataResult wikiData = WikiDataGrabber.GetDataFrom(SeeAlso);

                InfoText = wikiData?.Description ?? Comment;
                ImageUrl = wikiData?.ImageUrl;
                WikipediaURL = wikiData?.WikiUrl;
            });
            StateHasChanged();
        }
    }
    public class WikipediaTooltip
    {
        public string Text { get; set; }
        public string ImageUrl { get; set; }
    }
}
