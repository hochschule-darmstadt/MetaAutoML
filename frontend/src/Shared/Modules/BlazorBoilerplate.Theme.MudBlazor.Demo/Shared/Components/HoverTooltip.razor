<style>
    element{
        --height: @Height;
    }
    .tooltip .tooltiptext {
        visibility: hidden;
        display: block;
        text-align: center;
        position: absolute;
      /*  bottom: 63.5%;*/
        bottom: @Height;
      /*bottom:62.5%;*/
        right: @Right;
    }
        .tooltip .tooltiptext::after {
            content: " ";
            position: absolute;
            top: 100%; /* At the bottom of the tooltip  scoped css???*/
            left: 50%;
            margin-left: -5px;
            border-width: 5px;
            border-style: solid;
            border-color: grey transparent transparent transparent;
        }
      

    .tooltip:hover .tooltiptext {
        visibility: visible;
        background-color: grey;
        opacity: 50%;

    }

</style>
    <MudText Typo="Typo.body1" class="tooltip private-scope">
        @ChildContent
       
        <MudText Class="mud-tooltip mud-tooltip-default tooltiptext" Style="opacity: 100%!important; color:white!important;">
            @if (lines != null)
                for (int i = 0; i < lines.Length; i++)
                {
                    @lines[i];
                    <br />
                }
            @if (!string.IsNullOrEmpty(URL))
{
<MudLink Style="color:white!important" Href="@URL">
    more...
</MudLink>
}
            

        </MudText>
    </MudText>

@code {
    [Parameter]
    public string Label { get; set; }
    [Parameter]
    public string URL { get; set; }

    [Parameter]
    public RenderFragment ChildContent { get; set; }

    [Parameter]
    public string Height { get; set; }

    [Parameter]
    public string Right { get; set; }



    string[] lines;
    protected override void OnParametersSet()
    {
        lines = Label?.Split('\n');
    }

}

