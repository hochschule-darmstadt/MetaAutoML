<style>
    .position {
        bottom: 60%;
        /*bottom:62.5%;*/
        right: 2%;
    }
    .position-recentTrainings{
        bottom:60%;
        right:18.7%;
    }

    .position-recentDatasets-upload {
        bottom: 60%;
        right: 43.4%;
    }
    .position-recentDatasets {
        bottom: 60%;
        right: 66.3%;
    }
    .position-recentDatasets-more{
        bottom: 60%;
        right: 38%
    }
    .position-recentTrainings-more {
        bottom: 60%;
        right: 4%
    }
    .tooltip .tooltiptext {
        visibility: hidden;
        display: block;
        text-align: center;
        position: absolute;
        /*  bottom: 63.5%;*/
    }

        .tooltip .tooltiptext::after {
            content: " ";
            position: absolute;
            top: 100%; /* At the bottom of the tooltip  scoped css???*/
            left: 50%;
            margin-left: -5px;
            border-width: 5px;
            border-style: solid;
            border-color: grey transparent transparent transparent;
        }


    .tooltip:hover .tooltiptext {
        visibility: visible;
        background-color: grey;
        opacity: 50%;
    }

</style>
<MudText Typo="Typo.body1" class="tooltip position private-scope">
    @ChildContent

    <MudText Class="@Position" Style="opacity: 100%!important; color:white!important;">
        @if (lines != null)
            for (int i = 0; i < lines.Length; i++)
            {
                @lines[i];
                <br />
            }
        @if (!string.IsNullOrEmpty(URL))
        {
            <MudLink Style="color:white!important" Href="@URL">
                more...
            </MudLink>
        }


    </MudText>
</MudText>

@code {
    [Parameter]
    public string Label { get; set; }
    [Parameter]
    public string URL { get; set; }

    [Parameter]
    public RenderFragment ChildContent { get; set; }

    
    [Parameter]
    public string Position { get; set; }


    string[] lines;
    protected override void OnParametersSet()
    {
        lines = Label?.Split('\n');
    }

}

