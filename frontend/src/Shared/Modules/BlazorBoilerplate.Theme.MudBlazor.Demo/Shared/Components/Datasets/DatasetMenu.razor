@inject IStringLocalizer<Global> L
@inject NavigationManager NavManager
@inject IApiClient apiClient
@inject IViewNotifier viewNotifier


<MudMenu Icon="@Icons.Material.Filled.MoreVert">
    @if (Dataset != null)
    {
        <MudMenuItem OnClick="@(e => { NavManager.NavigateTo("/datasets/" + Dataset.Identifier + "/train"); })">Train</MudMenuItem>
        <MudMenuItem OnClick="@DeleteDataset">Delete</MudMenuItem>
    }
</MudMenu>

@code {
    [Parameter]
    public GetDatasetResponseDto Dataset { get; set; }

    private async Task DeleteDataset()
    {
        try
        {
            DeleteDatasetRequestDto datasetRequest = new DeleteDatasetRequestDto()
            {
                Identifier = Dataset.Identifier
            };
            ApiResponseDto apiResponse = await apiClient.DeleteDataset(datasetRequest);

            if (apiResponse.IsSuccessStatusCode)
            {
                viewNotifier.Show(apiResponse.Message, ViewNotifierType.Success, L["Operation Successful"]);
            }
            else
            {
                viewNotifier.Show(apiResponse.Message + " : " + apiResponse.StatusCode, ViewNotifierType.Error, L["Operation Failed"]);
            }
        }
        catch (Exception ex)
        {
            viewNotifier.Show(ex.GetBaseException().Message, ViewNotifierType.Error, L["Operation Failed"]);
        }
    }


}
