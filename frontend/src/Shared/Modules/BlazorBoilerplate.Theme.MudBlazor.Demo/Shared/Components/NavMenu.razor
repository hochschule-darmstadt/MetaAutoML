@using Microsoft.AspNetCore.Components;
@inject NavigationManager navigationManager
@inject IStringLocalizer<Global> L
@implements IDynamicComponent

<MudNavMenu Rounded="true" Margin="Margin.Normal" Color="Color.Secondary" Class="pa-2" Style="width:14.2rem">

    <MudNavLink Href="@navigationManager.ToAbsoluteUri(" ").AbsoluteUri" Match="NavLinkMatch.All" Icon="@Icons.Filled.Home">

        <ButtonTooltip Text= "@L["Home.Sidebar.tooltip"]" Position="Placement.Right">
            @L["Home"]
        </ButtonTooltip>
        @* <ButtonTooltip Text="OMA-ML makes effective Machine Learning (ML) easy! Simply upload a dataset, start ML training and use ML models.
From the home page you can navigate to trainings of ML models you have performed so far or open a dataset to start a new ML training." Position="Placement.Right">
            @L["Home"]
        </ButtonTooltip> *@
    </MudNavLink>
    <MudNavLink Href="@navigationManager.ToAbsoluteUri("datasets").AbsoluteUri" Icon="@Icons.Material.Filled.ListAlt">
        <ButtonTooltip Text="@L["Datasets.Sidebar.tooltip"]" Position="Placement.Right">
            @L["Datasets"]
        </ButtonTooltip>
    </MudNavLink>
    <MudNavLink Href="@navigationManager.ToAbsoluteUri("trainings").AbsoluteUri" Icon="@Icons.Material.Filled.ModelTraining">
        <ButtonTooltip Text="@L["Trainings.Sidebar.tooltip"]" Position="Placement.Right">
            @L["Trainings"]
        </ButtonTooltip>
    </MudNavLink>
    <MudNavLink Href="@navigationManager.ToAbsoluteUri("help").AbsoluteUri" Icon="@Icons.Material.Filled.HelpOutline">
        <ButtonTooltip Text="@L["Help.Sidebar.tooltip"]" Position="Placement.Right">
            @L["Help"]
        </ButtonTooltip>
    </MudNavLink>
</MudNavMenu>

@code {

    public int Order { get => 1; }
    public string IntoComponent { get => "NavMenu"; }

    public bool IsLoggedIn = false;

    [CascadingParameter]
    Task<AuthenticationState> authenticationStateTask { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        IsLoggedIn = false;
        var user = (await authenticationStateTask).User;

        if (user.Identity.IsAuthenticated)
        {
            IsLoggedIn = true;
        }
    }
}
