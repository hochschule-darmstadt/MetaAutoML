@using GTour.Components
@inject NavigationManager navigationManager

<GuidedTour TourId="FormGuidedTour" OverlayEnabled="true" CloseOnOverlayClick="true" OverlayClass="overlay-class">
    <ChildContent>
        <GuidedTourStep StepName="firstStep" TourStepSequence="1"
                        ElementSelector="[data-form-firstStep]" OnNavigateNext="@((tourStep) => { Console.WriteLine("hii"); })">
            <MudText Style="margin:1rem;" Typo="Typo.h6">Welcome to OMA ML</MudText>
            <MudText Style="margin:1rem;width: 40rem;" Typo="Typo.body2">
                Preprocessing is a crucial part of data preparation that aims to clean
                and organize raw data into a suitable format for the training. In this
                step you can chose column seperator, encoding, datetime format, escape character,
                decimal character and thousand seperator if necessary. You can also manually chose
                the datatype and role of the individual columns.
            </MudText>
        </GuidedTourStep>
        <GuidedTourStep Title="My second Step" StepName="secondStep" TourStepSequence="2"
                        ElementSelector="[data-form-secondStep]">
            <span>This is my 2. step</span>
        </GuidedTourStep>
        <GuidedTourStep Title="My 3. Step" StepName="thirdStep" TourStepSequence="3"
                        ElementSelector="[data-form-thirdStep]" OnNavigateNext="@((tourStep) => { Console.WriteLine("hii"); })">
            <HeaderContent>
                <span>This is my 3. step</span>
            </HeaderContent>
            <ChildContent>
                <div>Textetwedhuwidhe</div>
            </ChildContent>
            <FooterContent>
                <div>
                    <button class="btn" @onclick="@(() => context.GoToStep("firstStep"))">First Step</button>
                    <MudButton OnClick="@(() => context.PreviousStep())">Previous</MudButton>
                    <MudButton OnClick="@(() => NavigateToNextPage("forthStep", navigationManager.ToAbsoluteUri(" ").AbsoluteUri))">Next</MudButton>
                    <button class="btn" @onclick="@(() => context.CompleteTour())">Finish Tour</button>
                </div>
            </FooterContent>
        </GuidedTourStep>
        <GuidedTourStep Title="My 3. Step" StepName="forthStep" TourStepSequence="4"
                        ElementSelector="[data-form-forthStep]" OnNavigateNext="@((tourStep) => { Console.WriteLine("hii"); })">
            <HeaderContent>
                <span>This is my 4. step</span>
            </HeaderContent>
            <ChildContent>
                <div>xyz</div>
            </ChildContent>
            <FooterContent>
                <div>
                    <button class="btn" @onclick="@(() => context.GoToStep("firstStep"))">First Step</button>
                    <MudButton OnClick="@(() => NavigateToNextPage("thirdStep", navigationManager.ToAbsoluteUri("help").AbsoluteUri))">Previous</MudButton>
                    <button class="btn" @onclick="@(() => context.CompleteTour())">Finish Tour</button>
                </div>
            </FooterContent>
        </GuidedTourStep>

    </ChildContent>
</GuidedTour>


<style>
    .element-highlight {
        border: solid white;
        z-index: 999;
        position: relative;
        background-color: white;
    }

    .guided-tour-overlay {
        position: fixed;
        width: 100vw;
        height: 100vh;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: rgba(0, 0, 0, 0.5);
        z-index: 2;
    }

    .guided-tour-wrapper {
        z-index: 2;
        background: white;
        padding: 1rem;
        padding-bottom: 2rem;
        margin-bottom: 2rem;
        border: solid #f8943c;
        border-width: 4px;
    }
</style>

@code {
    [Inject]
    private GTour.Abstractions.IGTourService GTourService { get; set; }
    private void NavigateToNextPage(string step, string uri)
    {
        // var uri = navigationManager.GetUriWithQueryParameter("TourActivated", true);
        //var shouldUri = navigationManager.ToAbsoluteUri(" ").AbsoluteUri;
        if (uri.EndsWith("/")) { uri = uri.Remove(uri.Length - 1, 1); }
        var uriBuilder = new UriBuilder(uri);
        var q = System.Web.HttpUtility.ParseQueryString(uriBuilder.Query);
        q["TourStep"] = step;
        uriBuilder.Query = q.ToString();
        var newUrl = uriBuilder.ToString();
        navigationManager.NavigateTo(newUrl);
        //await context.NextStep();
        //await GTourService.StartTour("FormGuidedTour", "forthStep");

    }






}


