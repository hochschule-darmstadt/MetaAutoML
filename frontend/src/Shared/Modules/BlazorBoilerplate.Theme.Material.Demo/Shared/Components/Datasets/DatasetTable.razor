@inject IStringLocalizer<Global> L
@using System
@inject IApiClient apiClient
@inject IViewNotifier viewNotifier
@inject NavigationManager NavManager
@inject BlazorBoilerplate.Shared.Services.WizardState WizardState


<MatTable Items="@DatasetResponse" style="width:stretch" class="mat-elevation-z5" AllowSelection="false">
    <MatTableHeader>
        <th>Id</th>
        <th>Type</th>
        <th>Name</th>
        <th>Rows</th>
        <th>Columns</th>
        <th>Date</th>
        <th></th>
    </MatTableHeader>
    <MatTableRow>
        <td>@context.Identifier</td>
        <td>@context.Type.Properties["skos:prefLabel"]</td>
        <td>
            <a href="@NavManager.ToAbsoluteUri("datasets/" + @context.Identifier + "/" + @context.Name + "/" + @context.Type.ID + "/1").AbsoluteUri" Style="cursor: pointer;">@context.Name</a>
        </td>
        <td>@context.Rows</td>
        <td>@context.Columns</td>
        <td style="white-space:nowrap;">@context.Creation_date.ToString("yyyy-MM-dd")</td>
        <td>
            <DatasetMenu OpenDataset="OpenDataset" HandleClick="@(() => HandleDatasetChanged(context))"></DatasetMenu>
        </td>
    </MatTableRow>
</MatTable>

@code {
    [Parameter]
    public List<GetDatasetsResponseDto> DatasetResponse { get; set; }

    private string _navDatasetId;
    private string _navDatasetName;
    private string _navDatasetType;

    protected override void OnInitialized()
    {
        //Generate new wizzard object
        WizardState.automlRequest = new StartAutoMLRequestDto();
    }

    protected void OpenDataset(){
        NavManager.NavigateTo(NavManager.ToAbsoluteUri("datasets/" + _navDatasetId + "/" + _navDatasetName + "/" + _navDatasetType).AbsoluteUri);
    }

    private async void HandleDatasetChanged(GetDatasetsResponseDto obj)
    {
        _navDatasetId = obj.Identifier;
        _navDatasetName = obj.Name;
        _navDatasetType = obj.Type.ID;
    }
}