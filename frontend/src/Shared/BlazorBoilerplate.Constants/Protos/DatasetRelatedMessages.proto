syntax = "proto3";
option csharp_namespace = "BlazorBoilerplate.Server";

import "Enumerations.proto";
import "google/protobuf/timestamp.proto";

message GetDatasetRequest { 
  /*
    Unique user id generated by the controller on the create new user request from the frontend. Linked to a AspNetUser saved within the MS Sql database of the frontend
    example: '4a7af128-ac3d-4e3d-89fe-b70f7bfe0c3b'
  */
  string userId = 1;
  /*
    Unique dataset id generated when inserting a new dataset document into MongoDB
    example: '63515c86b10d04d230dc1482'
  */
  string datasetId = 2;
}

message GetDatasetResponse {
  /*
     Dataset record from MongoDB (see Dataset for more detals)
    example: Dataset
  */
  Dataset dataset = 1;
}

message GetDatasetsRequest {
  /*
    Unique user id generated by the controller on the create new user request from the frontend. Linked to a AspNetUser saved within the MS Sql database of the frontend
    example: '4a7af128-ac3d-4e3d-89fe-b70f7bfe0c3b'
  */
  string userId = 1;
  /*
    Filter to only return datasets of a specific dataset type
    example: ":tabular"
  */
  string type = 2;
}

message GetDatasetsResponse {
  /*
     List of dataset records from MongoDB (see Dataset for more detals)
    example: [Dataset, Dataset]
  */
  repeated Dataset datasets = 1;
}

message DeleteDatasetRequest {
  /*
    Unique user id generated by the controller on the create new user request from the frontend. Linked to a AspNetUser saved within the MS Sql database of the frontend
    example: '4a7af128-ac3d-4e3d-89fe-b70f7bfe0c3b'
  */
  string userId = 1;
  /*
    Unique dataset id generated when inserting a new dataset document into MongoDB
    example: '63515c86b10d04d230dc1482'
  */
  string datasetId = 2;
}

message DeleteDatasetResponse {
  
}

message Dataset {
  /*
    Unique dataset id generated when inserting a new dataset document into MongoDB
    example: '63515c86b10d04d230dc1482'
  */
  string id = 1;
  /*
    Display name for a dataset, set by the user on dataset upload
    example: "Titanic"
  */
  string name = 2;
  /*
    Dataset type Ontology URI, selected by the user on dataset upload
    example: ":tabular"
  */
  string type = 3;
  /*
    Absolute system path where the dataset is saved (single file dataset use the file name as ending of the path while multi file dataset will only have is root folder of the dataset)
    example: "app/app-data/datasets/....../titanic_train.csv"
  */
  string path = 4;
  /*
    The current file configuration used to open the dataset as a JSON string 
    example: '{
    "use_header": true,
    "start_row": 1,
    "delimiter": "comma",
    "escape_character": "\\",
    "decimal_character": "."
  }'
  */
  string fileConfiguration = 5;
  /*
    List of unique training id that use this dataset for training ML models
    example: ["63515cb4b10d04d230dc1484", "635255f5394eff35ee175bb5"]
  */
  repeated string trainingIds = 6;
  /*
    The result of the dataset analysis saved as JSON string
    example: See Dataset data schema inside wiki https://github.com/hochschule-darmstadt/MetaAutoML/wiki/2.-System-Architecture#dataset-record
  */
  string analysis = 7;
}

message CreateDatasetRequest {
  /*
    Unique user id generated by the controller on the create new user request from the frontend. Linked to a AspNetUser saved within the MS Sql database of the frontend
    example: '4a7af128-ac3d-4e3d-89fe-b70f7bfe0c3b'
  */
  string userId = 1;
  /*
    The uploaded file name
    example: "titanic_train.csv"
  */
  string fileName = 2;
  /*
    The user set dataset display name
    example: "Titanic"
  */
  string datasetName = 3;
  /*
    The user set dataset type ontology URI
    example: ":tabular"
  */
  string datasetType = 4;
  }
  
message CreateDatasetResponse {
  
  }

message SetDatasetFileConfigurationRequest {
  /*
    Unique user id generated by the controller on the create new user request from the frontend. Linked to a AspNetUser saved within the MS Sql database of the frontend
    example: '4a7af128-ac3d-4e3d-89fe-b70f7bfe0c3b'
  */
  string userId = 1;
  /*
    Unique dataset id generated when inserting a new dataset document into MongoDB
    example: '63515c86b10d04d230dc1482'
  */
  string datasetId = 2;
  /*
    The new file configuration to use to read the dataset file as a JSON string
    example: '{
    "use_header": true,
    "start_row": 1,
    "delimiter": "comma",
    "escape_character": "\\",
    "decimal_character": "."
  }'
  */
  string file_configuration = 3;
}

message SetDatasetFileConfigurationResponse {

}

message TableColumn {
  /*
    The column name defined in the dataset
    example: "Survived"
  */
  string name = 1;
  /*
    The dataset type asigned by OMA-ML
    example: DATATYPE_BOOLEAN
    #TODO Change to ontology IRIs or is this even still required?
  */
  DataType type = 2;
  /*
    List of dataset types that this column can be converted to
    example: [DATATYPE_CATEGORY, DATATYPE_INT]
    #TODO Change to ontology IRIs or is this even still required?
  */
  repeated DataType convertibleTypes = 3;
  }
  
message GetTabularDatasetColumnRequest {
  /*
    Unique user id generated by the controller on the create new user request from the frontend. Linked to a AspNetUser saved within the MS Sql database of the frontend
    example: '4a7af128-ac3d-4e3d-89fe-b70f7bfe0c3b'
  */
    string userId = 1;
    /*
      Unique dataset id generated when inserting a new dataset document into MongoDB
      example: '63515c86b10d04d230dc1482'
    */
    string datasetId = 2;
  }
  
message GetTabularDatasetColumnResponse {
  /*
    List of TableColumn objects (see TableColumn for more details)
    example: [TableColumn, TableColumn]
  */
  repeated TableColumn columns = 1;
}