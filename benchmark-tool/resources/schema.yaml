# yaml-language-server: $schema=https://json-schema.org/draft/2020-12/schema
title: Dataset
description: Schema definition for datasets to be used in the benchmark
type: object
properties:
  datasets:
    type: array
    description: List of datasets
    items:
      type: object
      properties:
        name_id:
          type: string
          description: Name of the dataset
        file_location:
          type: string
          description: Location of the dataset
        dataset_type:
          type: string
          description: Type of the dataset
          enum:
            - ':tabular'
            - ':text'
            - ':image'
            - ':video'
            - ':audio'
            - ':graph'
            - ':time_series'
            - ':time_series_longitudinal'
        columns:
          type: array
          description: List of columns in the dataset
          contains:
            type: object
          items:
            type: object
            properties:
              column_name:
                type: string
                description: header of the column
              column_role:
                type: string
                description: Role of the column
                enum:
                  - ':index'
                  - ':target'
                  - ':ignore'
                  - ':none' # default
                  - '' # same as :none
              column_type:
                type: string
                description: Type of the column
                enum:
                  - ':integer'
                  - ':float'
                  - ':boolean'
                  - ':string'
                  - ':categorical'
                  - ':datetime'
            required:
              - column_name
              - column_type
        training:
          type: object
          description: Training parameters
          properties:
            task:
              type: string
              description: Task to be performed
              enum:
                - :image_classification
                - :tabular_classification
                - :tabular_regression
                - :text_classification
                - :time_series_classification
                - :time_series_forecasting
            target:
              type: string
              description: Name of the target column
            enabled_strategies:
              type: array
              description: List of strategies to be used example from proto "['data_preparation.ignore_redundant_features']". For now there is no validation for this list.
              items:
                type: string
            runtime_limit:
              type: integer
              description: Maximum time in minutes to run the benchmark. Defaults to the value of the TRAINING_RUNTIME_LIMIT environment variable.
            metric:
              type: string
              description: Metric to be used for evaluation. Choosing a metric that is not compatible with the task or any AutoML solution will result in an error.
              enum: # all values listed in the ontology
                - :accuracy
                - :adjusted_rand_score
                - :area_under_roc_curve
                - :area_under_roc_curve_macro
                - :area_under_roc_curve_micro
                - :area_under_roc_curve_weighted
                - :average_precision
                - :balanced_accuracy
                - :binary_accuracy
                - :binary_cross_entropy
                - :binary_intersection_over_union
                - :brier
                - :categorical_accuracy
                - :categorical_cross_entropy
                - :categorical_hinge
                - :coefficient_of_determination
                - :cohens_kappa
                - :cosine_similarity
                - :coverage
                - :critical_success_index
                - :d2_absolute_error
                - :d2_pinball_score
                - :d2_tweedie_score
                - :explained_variance
                - :f_measure
                - :f_measure_macro
                - :f_measure_micro
                - :f_measure_samples
                - :f_measure_weighted
                - :false_discovery_rate
                - :false_negative_rate
                - :false_negatives
                - :false_omission_rate
                - :false_positive_rate
                - :false_positives
                - :fowlkes_mallows_index
                - :gini
                - :hinge
                - :informedness
                - :intersection_over_union
                - :jaccard
                - :jaccard_macro
                - :jaccard_micro
                - :jaccard_samples
                - :jaccard_weighted
                - :kullback_leibler_divergence
                - :log_cosh_error
                - :log_loss
                - :markedness
                - :matthews_correlation_coefficient
                - :max_error
                - :mean
                - :mean_absolute_error
                - :mean_absolute_percentage_error
                - :mean_absolute_scaled_error
                - :mean_gamma_deviance
                - :mean_intersection_over_union
                - :mean_metric_wrapper
                - :mean_poisson_deviance
                - :mean_relative_error
                - :mean_squared_error
                - :mean_squared_log_error
                - :mean_tensor
                - :median_absolute_error
                - :median_absolute_percentage_error
                - :median_absolute_scaled_error
                - :median_squared_error
                - :neg_log_loss
                - :negative_predictive_value
                - :normalized_discounted_cumulative_gain
                - :one_hot_intersection_over_union
                - :one_hot_mean_intersection_over_union
                - :overall_accuracy
                - :overall_f1
                - :overall_precision
                - :overall_recall
                - :pac_score
                - :pearson_correlation_coefficient
                - :poisson
                - :precision
                - :precision_at_recall
                - :precision_macro
                - :precision_micro
                - :precision_samples
                - :precision_weighted
                - :prevalence_threshold
                - :r2
                - :recall
                - :recall_at_precision
                - :recall_macro
                - :recall_micro
                - :recall_samples
                - :recall_weighted
                - :receiver_operating_characteristic_curve
                - :receiver_operating_characteristic_curve_one_vs_one
                - :receiver_operating_characteristic_curve_one_vs_one_weighted
                - :receiver_operating_characteristic_curve_one_vs_rest
                - :receiver_operating_characteristic_curve_one_vs_rest_weighted
                - :rooted_mean_squared_error
                - :rooted_mean_squared_log_error
                - :rooted_mean_squared_scaled_error
                - :sensitifity_at_specificity
                - :sparse_categorical_accuracy
                - :sparse_categorical_crossentropy
                - :sparse_top_k_categorical_accuracy
                - :spearman_rank_correlation_coefficient
                - :specificity
                - :specificity_at_sensitivity
                - :squared_hinge
                - :sum
                - :symmetric_mean_absolute_percentage_error
                - :top_k_categorical_accuracy
                - :true_negatives
                - :true_positives
            auto_mls:
              type: array
              description: List of AutoML solutions to be used.
              contains: # force at least one element
                type: string
              items:
                type: string
                enum: # all values listed in the ontology
                  - :autogluon
                  - :autokeras
                  - :autopytorch
                  - :autosklearn
                  - :evalml
                  - :flaml
                  - :gama
                  - :mcfly
                  - :mljar
                  - :pycaret
                  - :tpot
            parameters:
              type: object
              description: |
                List of parameters to be used for training. Example from proto:
                {
                  ":use_approach": { "values": [":adaboost", ":decision_tree"]},
                  ":metric": { "values": [":accuracy"]},
                  ":some_int": { "values": ["17"]}
                }
                Due to the dynamic nature of this object, it is not possible to validate its properties.
          required:
            - task
            - target
            - metric
            - auto_mls # mandatory for now, could be improved in the future to let empty list equal to all
      required:
        - name_id
        - file_location
        - dataset_type
        - columns
        - training
required:
  - datasets
