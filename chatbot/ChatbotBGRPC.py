# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: ChatbotService.proto
# plugin: python-betterproto
from dataclasses import dataclass
from typing import (
    TYPE_CHECKING,
    AsyncIterator,
    Dict,
    Optional,
)

import betterproto
import grpclib
from betterproto.grpc.grpclib_server import ServiceBase


if TYPE_CHECKING:
    import grpclib.server
    from betterproto.grpc.grpclib_client import MetadataLike
    from grpclib.metadata import Deadline


@dataclass(eq=False, repr=False)
class ChatRequest(betterproto.Message):
    message: str = betterproto.string_field(1)


@dataclass(eq=False, repr=False)
class ChatReply(betterproto.Message):
    reply: str = betterproto.string_field(1)


class ChatbotStub(betterproto.ServiceStub):
    async def chat(
        self,
        chat_request: "ChatRequest",
        *,
        timeout: Optional[float] = None,
        deadline: Optional["Deadline"] = None,
        metadata: Optional["MetadataLike"] = None
    ) -> AsyncIterator["ChatReply"]:
        async for response in self._unary_stream(
            "/Chatbot/Chat",
            chat_request,
            ChatReply,
            timeout=timeout,
            deadline=deadline,
            metadata=metadata,
        ):
            yield response


class ChatbotBase(ServiceBase):

    async def chat(self, chat_request: "ChatRequest") -> AsyncIterator["ChatReply"]:
        raise grpclib.GRPCError(grpclib.const.Status.UNIMPLEMENTED)

    async def __rpc_chat(
        self, stream: "grpclib.server.Stream[ChatRequest, ChatReply]"
    ) -> None:
        request = await stream.recv_message()
        await self._call_rpc_handler_server_stream(
            self.chat,
            stream,
            request,
        )

    def __mapping__(self) -> Dict[str, grpclib.const.Handler]:
        return {
            "/Chatbot/Chat": grpclib.const.Handler(
                self.__rpc_chat,
                grpclib.const.Cardinality.UNARY_STREAM,
                ChatRequest,
                ChatReply,
            ),
        }