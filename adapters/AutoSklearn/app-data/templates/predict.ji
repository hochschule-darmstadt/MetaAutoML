import pickle
import pandas as pd
import numpy as np
import sys
import json
from predict_time_sources import DataType, SplitMethod, feature_preparation

if __name__ == '__main__':
    filepath = sys.argv[1]
    config_path = sys.argv[2]
    save_path = sys.argv[3]
    X = None

    with open(config_path) as file:
        config_json = json.load(file)

    config_json["dataset_configuration"] = json.loads(config_json["dataset_configuration"])
    target = config_json["configuration"]["target"]
    features = config_json["dataset_configuration"]["column_datatypes"]
    features.pop(target, None)
    features = features.items()

    delimiters = {
        "comma":        ",",
        "semicolon":    ";",
        "space":        " ",
        "tab":          "\t",
    }

    X = pd.read_csv(filepath, delimiter=delimiters[config_json["dataset_configuration"]['file_configuration']['delimiter']], escapechar=config_json["dataset_configuration"]['file_configuration']['escape_character'], decimal=config_json["dataset_configuration"]['file_configuration']['decimal_character']).drop(target, axis=1, errors='ignore')


    # convert all object columns to categories, because autosklearn only supports numerical, bool and categorical features
    X[X.select_dtypes(['object']).columns] = X.select_dtypes(['object']) \
        .apply(lambda x: x.astype('category'))

    # split training set
    X = X.iloc[int(X.shape[0] * 0.2):]

    X = feature_preparation(X, features)

    with open(sys.path[0] + '/model_sklearn.p', 'rb') as file:
        automl = pickle.load(file)

    predicted_y = automl.predict(X)
    predicted_y = np.reshape(predicted_y, (-1, 1))
    pd.DataFrame(data=predicted_y, columns=["predicted"]).to_csv(save_path)
