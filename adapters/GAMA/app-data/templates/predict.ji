import sys
import dill
import json
import pandas as pd
import numpy as np
import os
from AdapterTabularUtils import *

{% if configuration.configuration["task"] in [":tabular_classification", ":tabular_regression", ":text_classification", ":text_regression"] %}
from preprocessing import dataset_preparation
from postprocessing import post_process_result_dataframe
{% endif %}
{% if configuration.configuration["task"] in [":time_series_forecasting"] %}
from preprocessing import dataset_preparation, seperate_time_series_dataframe
from postprocessing import post_process_result_dataframe
{% endif %}

if __name__ == '__main__':
    filepath = sys.argv[1]
    save_path = sys.argv[2]
    X = None


    with open(sys.path[0] + '/GAMA.p', 'rb') as file:
        loaded_model = dill.load(file)

    #Load live dataset
    X, y = dataset_preparation(filepath)
    X_index_df = pd.DataFrame(X.index)        #Some AutoML manipulate the index, so we extract it before hands
    predicted_y = loaded_model.predict(X)
    predicted_y = np.reshape(predicted_y, (-1, 1))
    predict_df = pd.DataFrame(data=predicted_y, columns=["predicted"])
    post_process_result_dataframe(X_index_df, predict_df).to_csv(save_path)


