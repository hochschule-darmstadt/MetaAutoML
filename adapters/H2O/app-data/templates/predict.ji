import sys
import json
import dill
import os

import numpy as np
import pandas as pd

import h2o

{% if configuration.configuration["task"] in [":tabular_classification", ":tabular_regression"] %}
from preprocessing import dataset_preparation
from postprocessing import post_process_result_dataframe
{% endif %}




if __name__ == '__main__':
    filepath = sys.argv[1]
    save_path = sys.argv[2]
    X = None
    h2o.init()

    {% if configuration.configuration["task"] in [":tabular_classification", ":tabular_regression"] %}
    X, y = dataset_preparation(filepath)
    X_index_df = pd.DataFrame(X.index)        #Some AutoML manipulate the index, so we extract it before hands
    {% endif %}

    loaded_model = h2o.load_model(os.path.join(sys.path[0], 'model_h2o.p'))
    #with open(os.path.join(sys.path[0], 'model_h2o.p'), 'rb') as file:
    #    loaded_model = dill.load(file)

    predicted_y = loaded_model.predict(h2o.H2OFrame(X))
    predicted_y = predicted_y.as_data_frame()
    {% if configuration.configuration["task"] in [":tabular_classification", ":tabular_regression"] %}
    predict_df = pd.DataFrame(predicted_y, columns=["predicted"])
    post_process_result_dataframe(X_index_df, predict_df).to_csv(save_path)
    {% else %}
    pd.DataFrame(predicted_y, columns=["predicted"]).to_csv(save_path)
    {% endif %}
